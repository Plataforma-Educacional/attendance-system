datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

model User {
  id                  Int              @id @default(autoincrement())
  email               String           @unique
  hashedPassword      String
  salt                String
  resetToken          String?
  resetTokenExpiresAt DateTime?
  webAuthnChallenge   String?          @unique
  credentials         UserCredential[]
  userRoles           UserRole[]
  chats               Chat[]
  Message             Message[]
}

model UserCredential {
  id         String  @id
  userId     Int
  user       User    @relation(fields: [userId], references: [id])
  publicKey  Bytes
  transports String?
  counter    BigInt
}

model UserRole {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  name      String
  user      User?    @relation(fields: [userId], references: [id])
  userId    Int?

  @@unique([name, userId])
}

model Chat {
  id        Int       @id @default(autoincrement())
  status    Int
  createdAt DateTime  @default(now())
  updatedAt DateTime
  members   User[]
  messages  Message[]
}

model Message {
  id        Int      @id @default(autoincrement())
  body      String
  createdAt DateTime @default(now())
  updatedAt DateTime
  author    User     @relation(fields: [userId], references: [id])
  userId    Int
  chat      Chat[]
}
